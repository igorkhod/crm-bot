import os
import requests
from dotenv import load_dotenv
from telegram import (
    Update,
    ReplyKeyboardMarkup,
    KeyboardButton
)
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    filters
)

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤
load_dotenv('token.env')
TOKEN = os.getenv('TOKEN')
DEEPSEEK_API_KEY = os.getenv('IGOR_KHOD_API_KEY')

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤
print("=" * 50)
print(f"üîê Telegram Token: {TOKEN[:10]}...")
print(f"üîê DeepSeek Key: {DEEPSEEK_API_KEY[:10]}...")
print("=" * 50)


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π"""
    button = KeyboardButton("üîÑ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ò–ò")
    reply_markup = ReplyKeyboardMarkup([[button]], resize_keyboard=True)

    await update.message.reply_text(
        "ü§ñ –Ø –±–æ—Ç —Å DeepSeek AI. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å:",
        reply_markup=reply_markup
    )


async def handle_ai_request(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –∏ –≤–æ–ø—Ä–æ—Å–æ–≤"""
    if update.message.text == "üîÑ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ò–ò":
        await update.message.reply_text(
            "üìù –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º:",
            reply_markup=None  # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞ –≤—Ä–µ–º—è –≤–≤–æ–¥–∞
        )
        context.user_data['awaiting_question'] = True
    elif context.user_data.get('awaiting_question'):
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–æ–ø—Ä–æ—Å–∞ –≤ DeepSeek
        question = update.message.text
        try:
            headers = {"Authorization": f"Bearer {DEEPSEEK_API_KEY}"}
            data = {
                "model": "deepseek-chat",
                "messages": [{"role": "user", "content": question}]
            }
            response = requests.post(
                "https://api.deepseek.com/v1/chat/completions",
                headers=headers,
                json=data
            ).json()

            answer = response['choices'][0]['message']['content']
            button = KeyboardButton("üîÑ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ò–ò")
            reply_markup = ReplyKeyboardMarkup([[button]], resize_keyboard=True)

            await update.message.reply_text(
                f"üîç –û—Ç–≤–µ—Ç:\n{answer}",
                reply_markup=reply_markup
            )
        except Exception as e:
            await update.message.reply_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")
        finally:
            context.user_data['awaiting_question'] = False
    else:
        button = KeyboardButton("üîÑ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ò–ò")
        reply_markup = ReplyKeyboardMarkup([[button]], resize_keyboard=True)
        await update.message.reply_text(
            "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å:",
            reply_markup=reply_markup
        )


def main():
    app = Application.builder().token(TOKEN).build()

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_ai_request))

    print("üü¢ –ë–æ—Ç —Å DeepSeek –∑–∞–ø—É—â–µ–Ω. –ù–∞–∂–º–∏—Ç–µ /start –≤ Telegram.")
    app.run_polling()


if __name__ == "__main__":
    main()