import telebot
from telebot import types
import random

TOKEN = "8101400368:AAGnAFPEXm_uHyeCblaj-WQUPMLUYvEZ-n4"
bot = telebot.TeleBot(TOKEN)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_menu():
    markup = types.InlineKeyboardMarkup()
    markup.row(
        types.InlineKeyboardButton("üìä –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏", callback_data="main_functions"),
        types.InlineKeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")
    )
    markup.row(
        types.InlineKeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="help"),
        types.InlineKeyboardButton("üéÅ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ", callback_data="extras")
    )
    return markup

# –ú–µ–Ω—é "–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏"
def functions_menu():
    markup = types.InlineKeyboardMarkup()
    markup.row(
        types.InlineKeyboardButton("üìà –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç", callback_data="currency"),
        types.InlineKeyboardButton("üî¢ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ", callback_data="random_num")
    )
    markup.row(types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main"))
    return markup

# –ú–µ–Ω—é "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"
def settings_menu():
    markup = types.InlineKeyboardMarkup()
    markup.row(
        types.InlineKeyboardButton("üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data="notifications"),
        types.InlineKeyboardButton("üåê –Ø–∑—ã–∫", callback_data="language")
    )
    markup.row(types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main"))
    return markup

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(
        message.chat.id,
        "üè† *–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é*:",
        reply_markup=main_menu(),
        parse_mode="Markdown"
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ inline-–∫–Ω–æ–ø–∫–∏
@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    try:
        if call.data == "main_functions":
            bot.edit_message_text(
                "üìä *–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏*:",
                call.message.chat.id,
                call.message.message_id,
                reply_markup=functions_menu(),
                parse_mode="Markdown"
            )

        elif call.data == "settings":
            bot.edit_message_text(
                "‚öôÔ∏è *–ù–∞—Å—Ç—Ä–æ–π–∫–∏*:",
                call.message.chat.id,
                call.message.message_id,
                reply_markup=settings_menu(),
                parse_mode="Markdown"
            )

        elif call.data == "back_to_main":
            bot.edit_message_text(
                "üè† *–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é*:",
                call.message.chat.id,
                call.message.message_id,
                reply_markup=main_menu(),
                parse_mode="Markdown"
            )

        elif call.data == "currency":
            bot.answer_callback_query(call.id)
            bot.send_message(
                call.message.chat.id,
                "üíµ *–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç*:\nUSD: 75.50 RUB\nEUR: 85.30 RUB",
                parse_mode="Markdown"
            )

        elif call.data == "random_num":
            bot.answer_callback_query(
                call.id,
                f"üé≤ –í–∞—à–µ —á–∏—Å–ª–æ: {random.randint(1, 100)}",
                show_alert=True
            )

        elif call.data == "help":
            bot.edit_message_text(
                "‚ÑπÔ∏è *–ü–æ–º–æ—â—å*:\n–≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –º–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤–æ–≥–æ –º–µ–Ω—é.",
                call.message.chat.id,
                call.message.message_id,
                parse_mode="Markdown"
            )

        # –î–æ–±–∞–≤–ª–µ–Ω –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è "extras"
        elif call.data == "extras":
            bot.edit_message_text(
                "üéÅ *–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏*:\n–ó–¥–µ—Å—å –º–æ–≥—É—Ç –±—ã—Ç—å –≤–∞—à–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏",
                call.message.chat.id,
                call.message.message_id,
                parse_mode="Markdown"
            )

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")

if __name__ == '__main__':
    print("–ë–æ—Ç —Å –º–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤—ã–º –º–µ–Ω—é –∑–∞–ø—É—â–µ–Ω!")
    bot.polling(none_stop=True)