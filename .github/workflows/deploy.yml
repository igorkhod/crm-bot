name: Deploy Psytech Bot

on:
  push:
    branches: [ "main" ]

# нужно, чтобы job мог пушить изменения обратно
permissions:
  contents: write

concurrency:
  group: deploy-psytech-bot
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) Получаем код
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      # 2) ⛏ Генерим и коммитим документацию (PROJECT_MAP.full.md, README.md)
      - name: Update docs (PROJECT_MAP.full.md, README.md)
        run: |
          set -e
          # запускаем твой генератор
          python scripts/update_project_map.py

          # настраиваем автора коммита от имени GitHub Actions
          git config --global user.name  "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # индексируем только если файлы есть
          git add crm2/PROJECT_MAP.full.md 2>/dev/null || true
          git add README.md 2>/dev/null || true

          # коммитим ТОЛЬКО при реальных изменениях
          if ! git diff --cached --quiet; then
            git commit -m "chore(docs): auto-update PROJECT_MAP.full.md and README.md [skip ci]"
            git push
          else
            echo "No doc changes"
          fi

      # 3) Упаковываем проект в tar.gz (без .git)
      - name: Make tarball (git archive)
        run: |
          git archive --format=tar.gz -o app.tgz HEAD
          ls -lh app.tgz

      # 4) Копируем архив на VPS
      - name: Upload tarball via SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_SSH_PORT || 22 }}
          source: app.tgz
          target: /opt/psytech-bot/

      # 5) Разворачиваем и перезапускаем сервис на VPS
      - name: Extract & restart (SSH)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_SSH_PORT || 22 }}
          script: |
            set -e
            cd /opt/psytech-bot
            mkdir -p app
            tar xzf app.tgz -C app
            rm -f app.tgz

            # находим requirements в типичных местах
            REQ=""
            for CAND in app/requirements.txt app/crm2/requirements.txt app/crm2/app/requirements.txt app/*/requirements.txt app/**/requirements.txt; do
              [ -f "$CAND" ] && { REQ="$CAND"; break; }
            done
            if [ -n "$REQ" ]; then
              echo "Using requirements: $REQ"
              /opt/psytech-bot/venv/bin/pip install -r "$REQ"
            else
              echo "⚠️ requirements.txt не найден — пропускаю установку зависимостей"
            fi

            sudo -n systemctl restart psytech-bot.service
            sudo -n systemctl is-active --quiet psytech-bot.service && echo "✅ Bot running"
            journalctl -u psytech-bot -n 60 --no-pager || true
