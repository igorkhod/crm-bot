import json
from docx import Document
from pathlib import Path


def convert_docx_to_json(docx_path, json_path):
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç —Ü–∏—Ç–∞—Ç—ã –∏–∑ DOCX –≤ JSON (—Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç)"""
    try:
        doc = Document(docx_path)
        quotes = []

        for paragraph in doc.paragraphs:
            text = paragraph.text.strip()
            if text:
                # –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å, –±–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ —á–∞—Å—Ç—å –¥–æ –Ω–µ–≥–æ
                if "‚Äî" in text:
                    quote_text = text.split("‚Äî", 1)[0]
                elif "‚Äì" in text:
                    quote_text = text.split("‚Äì", 1)[0]
                else:
                    quote_text = text

                quotes.append({"text": quote_text.strip()})

        with open(json_path, 'w', encoding='utf-8') as f:
            json.dump(quotes, f, indent=2, ensure_ascii=False)

        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ {len(quotes)} —Ü–∏—Ç–∞—Ç")
        print(f"üìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ {json_path}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")


# –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
docx_file = Path("—Ü–∏—Ç–∞—Ç—ã.docx")
json_file = Path("quotes.json")

if __name__ == "__main__":
    if docx_file.exists():
        convert_docx_to_json(docx_file, json_file)

        # –ü–æ–∫–∞–∂–µ–º –ø–µ—Ä–≤—ã–µ 3 —Ü–∏—Ç–∞—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        try:
            with open(json_file, 'r', encoding='utf-8') as f:
                sample = json.load(f)[:3]
            print("\n–ü—Ä–∏–º–µ—Ä —Ü–∏—Ç–∞—Ç:")
            for i, quote in enumerate(sample, 1):
                print(f"{i}. {quote['text']}")
        except:
            pass
    else:
        print(f"‚ùå –§–∞–π–ª {docx_file} –Ω–µ –Ω–∞–π–¥–µ–Ω!")