from datetime import datetime
import telebot
from telebot import types
import random
import requests
from xml.etree import ElementTree as ET
import io

TOKEN = '8101400368:AAGnAFPEXm_uHyeCblaj-WQUPMLUYvEZ-n4'
bot = telebot.TeleBot(TOKEN)


def get_currency_rate(currency_code):
    try:
        current_date = datetime.now().strftime("%d/%m/%Y")
        url = f'http://www.cbr.ru/scripts/XML_daily.asp?date_req={current_date}'

        response = requests.get(url)
        response.raise_for_status()
        root = ET.fromstring(response.content)

        for valute in root.findall('Valute'):
            if valute.find('CharCode').text == currency_code:
                nominal = valute.find('Nominal').text
                value = valute.find('Value').text
                name = valute.find('Name').text
                return f"{nominal} {currency_code} ({name}): {value} —Ä—É–±."

        return f"–ö—É—Ä—Å {currency_code} –Ω–µ –Ω–∞–π–¥–µ–Ω"
    except Exception as e:
        return f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—É—Ä—Å–∞: {str(e)}"


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('üî∏ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ')
    item2 = types.KeyboardButton('üìà –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç')
    item3 = types.KeyboardButton('üìö –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
    item4 = types.KeyboardButton('‚û°Ô∏è –î—Ä—É–≥–æ–µ')
    markup.add(item1, item2, item3, item4)
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, {0.first_name}!'.format(message.from_user), reply_markup=markup)


def show_currency_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('üá∫üá∏ –ö—É—Ä—Å –î–æ–ª–ª–∞—Ä–∞')
    item2 = types.KeyboardButton('üá™üá∫ –ö—É—Ä—Å –ï–≤—Ä–æ')
    back = types.KeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
    markup.add(item1, item2, back)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫—É—Ä—Å–∞:", reply_markup=markup)


@bot.message_handler(content_types=['text'])
def bot_message(message):
    if message.chat.type == 'private':
        if message.text == 'üî∏ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ':
            bot.send_message(message.chat.id, '–í–∞—à–µ —á–∏—Å–ª–æ: ' + str(random.randint(0, 1000)))

        elif message.text == 'üìà –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç':
            show_currency_menu(message)

        elif message.text in ['üá∫üá∏ –ö—É—Ä—Å –î–æ–ª–ª–∞—Ä–∞', 'üá™üá∫ –ö—É—Ä—Å –ï–≤—Ä–æ']:
            currency = "USD" if message.text == 'üá∫üá∏ –ö—É—Ä—Å –î–æ–ª–ª–∞—Ä–∞' else "EUR"
            rate = get_currency_rate(currency)
            bot.send_message(message.chat.id, rate)

        elif message.text == 'üìö –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton('üíæ –û –±–æ—Ç–µ')
            item2 = types.KeyboardButton('üì¶ –ß—Ç–æ –≤ –∫–æ—Ä–æ–±–∫–µ?')
            back = types.KeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
            markup.add(item1, item2, back)
            bot.send_message(message.chat.id, 'üìö –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', reply_markup=markup)

        elif message.text == '‚û°Ô∏è –î—Ä—É–≥–æ–µ':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton('üõ† –ù–∞—Å—Ç—Ä–æ–π–∫–∏')
            item2 = types.KeyboardButton('‚úâÔ∏è –ü–æ–¥–ø–∏—Å–∫–∞')
            item3 = types.KeyboardButton('üß∏ –°—Ç–∏–∫–µ—Ä')
            back = types.KeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
            markup.add(item1, item2, item3, back)
            bot.send_message(message.chat.id, '‚û°Ô∏è –î—Ä—É–≥–æ–µ', reply_markup=markup)

        elif message.text == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton('üî∏ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ')
            item2 = types.KeyboardButton('üìà –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç')
            item3 = types.KeyboardButton('üìö –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
            item4 = types.KeyboardButton('‚û°Ô∏è –î—Ä—É–≥–æ–µ')
            markup.add(item1, item2, item3, item4)
            bot.send_message(message.chat.id, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=markup)

        elif message.text == 'üß∏ –°—Ç–∏–∫–µ—Ä':
            try:
                # 1. –£–∫–∞–∑—ã–≤–∞–µ–º URL —Å—Ç–∏–∫–µ—Ä–∞
                sticker_url = 'https://psysib.ru/stick.webp'

                # 2. –°–∫–∞—á–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—É—é –ø–∞–º—è—Ç—å (–±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞ –¥–∏—Å–∫)
                response = requests.get(sticker_url)
                response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—à–∏–±–æ–∫ HTTP

                # 3. –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –≤ –ø–∞–º—è—Ç–∏
                sticker_file = io.BytesIO(response.content)
                sticker_file.name = 'sticker.webp'  # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º –∏–º—è —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º

                # 4. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∏–∫–µ—Ä
                bot.send_sticker(message.chat.id, sticker_file)

                # 5. –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª–æ–≤—ã–π –æ–±—ä–µ–∫—Ç
                sticker_file.close()

            except requests.exceptions.RequestException:
                bot.send_message(message.chat.id, "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∏–∫–µ—Ä —Å —Å–µ—Ä–≤–µ—Ä–∞")
            except Exception as e:
                bot.send_message(message.chat.id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {str(e)}")


bot.polling(none_stop=True)

# @bot.message_handler(commands=['date'])
# def send_date(message):
#    current_date = datetime.now().strftime("%d/%m/%Y")
#    url = 'http://www.cbr.ru/scripts/XML_daily.asp?date_req=' + current_date
# bot.infinity_polling()
