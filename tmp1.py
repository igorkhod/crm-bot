import asyncio
import os
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
# from aiogram.utils import executor
import aiogram.utils.executor as executor
from dotenv import load_dotenv

# üåø –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ token.env
load_dotenv(dotenv_path="token.env")
API_TOKEN = os.getenv("TELEGRAM_TOKEN")

# üîß –ü—Ä–æ–≤–µ—Ä–∫–∞: —Ç–æ–∫–µ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞–π–¥–µ–Ω
if not API_TOKEN:
    raise ValueError("–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å —Ñ–∞–π–ª token.env –∏ –∫–ª—é—á TELEGRAM_TOKEN.")

# ü§ñ –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# üßô –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=["start"])
async def start_command(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç, –ø—É—Ç–Ω–∏–∫! –≠—Ç–æ –Ω–∞—á–∞–ª–æ —Ç–≤–æ–µ–≥–æ –ø—É—Ç–∏ —Å Python.")

# üåû –ö–æ–º–∞–Ω–¥–∞ /hello
@dp.message_handler(commands=["hello"])
async def hello_command(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, —Å—Ç—Ä–∞–Ω–Ω–∏–∫!")

# üé≤ –ö–æ–º–∞–Ω–¥–∞ /random
@dp.message_handler(commands=["random"])
async def random_command(message: Message):
    import random
    number = random.randint(1, 100)
    await message.answer(f"–°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ: {number}")

# üîÑ –û—Ç–≤–µ—Ç –Ω–∞ –≤—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ
@dp.message_handler()
async def echo_handler(message: Message):
    await message.answer(f"–¢—ã —Å–∫–∞–∑–∞–ª: {message.text}")

# üöÄ –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–µ—Ç –∫–æ–º–∞–Ω–¥ –≤ Telegram...")
    executor.start_polling(dp, skip_updates=True)
