from datetime import datetime
import telebot
from telebot import types
import threading
import time

TOKEN = '8101400368:AAGnAFPEXm_uHyeCblaj-WQUPMLUYvEZ-n4'
bot = telebot.TeleBot(TOKEN)

# –°–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è chat_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
users_subscribed = set()


@bot.message_handler(commands=['start'])
def start(message):
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
    users_subscribed.add(message.chat.id)

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å /start –≤ —Å—Ç—Ä–æ–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_start = types.KeyboardButton('/start')
    markup.add(btn_start)

    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.send_message(
        message.chat.id,
        f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –Ø –±—É–¥—É –∂–µ–ª–∞—Ç—å —Ç–µ–±–µ –¥–æ–±—Ä–æ–≥–æ —É—Ç—Ä–∞! ‚òÄÔ∏è\n\n'
        '–ö–∞–∂–¥–æ–µ —É—Ç—Ä–æ –≤ 7:00 —è –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–±–µ –ø—Ä–∏—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!',
        reply_markup=markup
    )


def send_morning_notification():
    while True:
        now = datetime.now()
        if now.hour == 7 and now.minute == 0:  # 7:00 —É—Ç—Ä–∞
            for user_id in users_subscribed:
                try:
                    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å /start
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    btn_start = types.KeyboardButton('/start')
                    markup.add(btn_start)

                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É—Ç—Ä–µ–Ω–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    bot.send_message(
                        user_id,
                        f'‚òÄÔ∏è –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, –¥—Ä—É–∂–∏—â–µ!\n'
                        f'–°–µ–≥–æ–¥–Ω—è {now.strftime("%d.%m.%Y")}\n'
                        f'–ü—É—Å—Ç—å –¥–µ–Ω—å –±—É–¥–µ—Ç –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–º! üí™',
                        reply_markup=markup
                    )

                    # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å—Ç–∏–∫–µ—Ä
                    bot.send_sticker(user_id, 'https://psysib.ru/stick.webp')

                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")
            time.sleep(60)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
        time.sleep(30)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥


# –ó–∞–ø—É—Å–∫–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
notification_thread = threading.Thread(target=send_morning_notification)
notification_thread.daemon = True
notification_thread.start()


@bot.message_handler(func=lambda message: True)
def handle_all_messages(message):
    if message.text == '/start':
        start(message)


bot.polling(none_stop=True)