# handlers.py ‚Äî –º–æ–¥—É–ª—å —Å Telegram-—Ö–µ–Ω–¥–ª–µ—Ä–∞–º–∏ CRM-—Å–∏—Å—Ç–µ–º—ã.
# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /crm –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞ –ø–æ—Ç–æ–∫–∏ —á–µ—Ä–µ–∑ CallbackQuery.

from aiogram import F, Router, Dispatcher # üì¶ –ò–º–ø–æ—Ä—Ç –∏–∑ –º–æ–¥—É–ª—è
from aiogram.types import Message, CallbackQuery # üì¶ –ò–º–ø–æ—Ä—Ç –∏–∑ –º–æ–¥—É–ª—è
from aiogram.filters import Command # üì¶ –ò–º–ø–æ—Ä—Ç –∏–∑ –º–æ–¥—É–ª—è

from .keyboards import main_crm_keyboard # üì¶ –ò–º–ø–æ—Ä—Ç –∏–∑ –º–æ–¥—É–ª—è
from .services import get_user_by_telegram, register_participant # üì¶ –ò–º–ø–æ—Ä—Ç –∏–∑ –º–æ–¥—É–ª—è

crm_router = Router()


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /crm
async def start_crm(message: Message):
    telegram_id = message.from_user.id
    user = await get_user_by_telegram(telegram_id)

    if not user: # ‚úÖ –£—Å–ª–æ–≤–Ω–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
        await message.answer("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.") # ‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏
        return # ‚Ü©Ô∏è –í–æ–∑–≤—Ä–∞—Ç –∑–Ω–∞—á–µ–Ω–∏—è

    role = user[5]  # –ò–Ω–¥–µ–∫—Å –ø–æ–ª—è 'role' –≤ –≤—ã–±–æ—Ä–∫–µ SELECT * FROM users
    role_name = "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä" if role == "admin" else "–ö—É—Ä—Å–∞–Ω—Ç"

    await message.answer( # ‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏
        f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ CRM!\n–í–∞—à–∞ —Ä–æ–ª—å: {role_name}",
        reply_markup=main_crm_keyboard(role=role)
    )


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ –ø–æ—Ç–æ–∫
async def register_to_stream(callback: CallbackQuery):
    try: # üõë –ë–ª–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ (try)
        stream_id = int(callback.data.split(":")[1])
    except (IndexError, ValueError): # ‚ö†Ô∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
        await callback.answer("–û—à–∏–±–∫–∞: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ—Ç–æ–∫–∞") # ‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏
        return # ‚Ü©Ô∏è –í–æ–∑–≤—Ä–∞—Ç –∑–Ω–∞—á–µ–Ω–∏—è

    telegram_id = callback.from_user.id
    success = await register_participant(telegram_id, stream_id)

    if success: # ‚úÖ –£—Å–ª–æ–≤–Ω–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
        await callback.answer("–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ –ø–æ—Ç–æ–∫!") # ‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏
    else: # üîö –ò–Ω–∞—á–µ (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞)
        await callback.answer("–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ —ç—Ç–æ—Ç –ø–æ—Ç–æ–∫ –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞") # ‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏


# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤ CRM –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–µ
def register_crm_handlers(dp: Dispatcher): # üîß –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏/–º–µ—Ç–æ–¥–∞
    dp.message.register(start_crm, Command("crm"))
    dp.callback_query.register(register_to_stream, F.data.startswith("register:"))