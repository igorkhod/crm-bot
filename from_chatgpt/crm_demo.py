import asyncio
import logging
import os
from pathlib import Path

import aiosqlite
from aiogram import Bot, Dispatcher
from aiogram.client.default import DefaultBotProperties
from aiogram.enums.parse_mode import ParseMode
from dotenv import load_dotenv

from crm.handlers_admin_info import register_admin_info_handlers
from from_chatgpt.crm.models import init_crm_db, update_admin_role
from crm.handlers_registration_login_reset_email import registration_router
from from_chatgpt.crm.db import DB_PATH, init_db

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv_path = Path(__file__).resolve().parent / "token_local.env"
load_dotenv(dotenv_path)

TOKEN = os.getenv("TELEGRAM_TOKEN")
# ADMIN_ID = int(os.getenv("ADMIN_ID"))
ADMIN_ID = os.getenv("ADMIN_ID")
print(f"üì• TOKEN:  {TOKEN[:5]}..., –æ–±—Ä–µ–∑–∞–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é")
print(f"–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π ADMIN_ID –∏–∑ .env: {str(ADMIN_ID)[:5]}..., –æ–±—Ä–µ–∑–∞–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é")


# –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ë–î
async def inspect_db():
    async with aiosqlite.connect(DB_PATH) as conn:
        cursor = await conn.execute("SELECT name FROM sqlite_master WHERE type='table';")
        tables = await cursor.fetchall()
        print(f"üìÇ CRM –±–∞–∑–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞. –ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü: {len(tables)}")
        for t in tables:
            print(f"üîπ –¢–∞–±–ª–∏—Ü–∞: {t[0]}")


print(f"–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {DB_PATH}")


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    init_db()
    logging.basicConfig(level=logging.INFO)
    await inspect_db()
    await init_crm_db()
    await inspect_db()
    print("üì¶ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è CRM-–±–∞–∑—ã...")
    await update_admin_role(ADMIN_ID)
    print("üõ† –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...")

    # bot = Bot(token=TOKEN, parse_mode=ParseMode.HTML)
    bot = Bot(
        token=TOKEN,
        default=DefaultBotProperties(parse_mode=ParseMode.HTML)
    )

    dp = Dispatcher()

    from crm.handlers_info_schedule import info_schedule_router
    from crm.handlers_admin_schedule import admin_schedule_router
    dp.include_router(info_schedule_router)
    dp.include_router(admin_schedule_router)

    # —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è_—Ä–æ—É—Ç–µ—Ä–æ–≤
    dp.include_router(registration_router)
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ö–µ–Ω–¥–ª–µ—Ä—ã –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    register_admin_info_handlers(dp)

    print("ü§ñ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤...")
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π...")
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
