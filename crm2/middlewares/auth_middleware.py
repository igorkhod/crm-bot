# crm2/middlewares/callback_auth_middleware.py
# –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: Middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ callback-–∑–∞–ø—Ä–æ—Å–æ–≤
# –ö–ª–∞—Å—Å—ã:
# - CallbackAuthMiddleware - Middleware –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∫–æ–ª–±—ç–∫–æ–≤
# –ú–µ—Ç–æ–¥—ã:
# - __call__ - –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
from typing import Callable, Dict, Any, Awaitable
from aiogram import BaseMiddleware
from aiogram.types import Message

from crm2.services.users import get_user_by_telegram
from crm2.keyboards import guest_start_kb


class AuthMiddleware(BaseMiddleware):
    async def __call__(
            self,
            handler: Callable[[Message, Dict[str, Any]], Awaitable[Any]],
            event: Message,
            data: Dict[str, Any]
    ) -> Any:
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—É /start –∏ –≥–æ—Å—Ç–µ–≤—ã–µ –∫–Ω–æ–ø–∫–∏
        allowed_commands = ['/start', 'üîê –í–æ–π—Ç–∏', 'üÜï –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è', 'üìñ –û –ø—Ä–æ–µ–∫—Ç–µ', 'üîô –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é']

        if event.text in allowed_commands:
            return await handler(event, data)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
        user = get_user_by_telegram(event.from_user.id)

        if not user or not user.get('nickname') or not user.get('password'):
            await event.answer(
                "‚õîÔ∏è –î–æ—Å—Ç—É–ø –æ–≥—Ä–∞–Ω–∏—á–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –∏–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å.",
                reply_markup=guest_start_kb()
            )
            return

        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –¥–∞–Ω–Ω—ã–µ
        data['user'] = user
        return await handler(event, data)