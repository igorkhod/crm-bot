# crm2/middlewares/callback_auth_middleware.py
# –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: Middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ callback-–∑–∞–ø—Ä–æ—Å–æ–≤
# –ö–ª–∞—Å—Å—ã:
# - CallbackAuthMiddleware - Middleware –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∫–æ–ª–±—ç–∫–æ–≤
# –ú–µ—Ç–æ–¥—ã:
# - __call__ - –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
# crm2/middlewares/auth_middleware.py (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
# –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
# crm2/middlewares/auth_middleware.py
# –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: Middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏ callback-–∑–∞–ø—Ä–æ—Å–æ–≤
# –ö–ª–∞—Å—Å—ã:
# - AuthMiddleware - Middleware –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
# –ú–µ—Ç–æ–¥—ã:
# - __call__ - –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ –∏—Å–∫–ª—é—á–µ–Ω–∏—è–º–∏ –¥–ª—è –≥–æ—Å—Ç–µ–≤—ã—Ö –∫–æ–º–∞–Ω–¥

from aiogram import BaseMiddleware
from aiogram.types import Message, CallbackQuery
from typing import Callable, Dict, Any, Awaitable
from crm2.services.users import get_user_by_telegram


class AuthMiddleware(BaseMiddleware):
    async def __call__(
            self,
            handler: Callable[[Message, Dict[str, Any]], Awaitable[Any]],
            event: Message | CallbackQuery,
            data: Dict[str, Any]
    ) -> Any:
        # –ò—Å–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è –≥–æ—Å—Ç–µ–≤—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ –¥–µ–π—Å—Ç–≤–∏–π
        guest_commands = ['/start', '/login', '/help', '/about', '/register', '/menu', '/cancel']

        # –î–ª—è CallbackQuery –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ
        if isinstance(event, CallbackQuery):
            # –†–∞–∑—Ä–µ—à–∞–µ–º –∫–æ–ª–±—ç–∫–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π
            if event.data and any(auth_key in event.data for auth_key in ['auth', 'login', 'register', 'guest']):
                return await handler(event, data)

        # –î–ª—è Message –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—Å—Ç –∫–æ–º–∞–Ω–¥—ã
        if isinstance(event, Message) and event.text:
            text = event.text.strip()
            if any(text.startswith(cmd) for cmd in guest_commands) or text in ["üîê –í–æ–π—Ç–∏", "üÜï –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è",
                                                                               "üìñ –û –ø—Ä–æ–µ–∫—Ç–µ", "üîô –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é"]:
                return await handler(event, data)

        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ë–ï–ó AWAIT - —Ñ—É–Ω–∫—Ü–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è!)
        user = await get_user_by_telegram(event.from_user.id)

        if not user or not user.get('nickname') or not user.get('password'):
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
            if isinstance(event, Message):
                from crm2.keyboards import guest_start_kb
                await event.answer(
                    "üîê –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É —Ä–∞–∑–¥–µ–ª—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è.\n\n"
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É 'üîê –í–æ–π—Ç–∏' –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É /start",
                    reply_markup=guest_start_kb()
                )
                return
            elif isinstance(event, CallbackQuery):
                await event.answer("‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è", show_alert=True)
                return

        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ data –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        data['user'] = user
        return await handler(event, data)