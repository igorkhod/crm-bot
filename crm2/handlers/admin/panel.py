from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from crm2.utils.guards import AdminOnly

router = Router()
router.message.middleware(AdminOnly())
router.callback_query.middleware(AdminOnly())

def admin_menu_kb():
    rows = [
        [InlineKeyboardButton(text="üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", callback_data="adm:users"),
         InlineKeyboardButton(text="üóì –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data="adm:schedule")],
        [InlineKeyboardButton(text="üì£ –†–∞—Å—Å—ã–ª–∫–∞", callback_data="adm:broadcast"),
         InlineKeyboardButton(text="üßæ –õ–æ–≥–∏", callback_data="adm:logs")],
    ]
    return InlineKeyboardMarkup(inline_keyboard=rows)

# --- –í–•–û–î –í –ê–î–ú–ò–ù–ö–£ –ü–û –°–û–û–ë–©–ï–ù–ò–Æ (reply-–∫–Ω–æ–ø–∫–∞) ---
@router.message(F.text.in_({"‚öôÔ∏è –ê–¥–º–∏–Ω", "üõ† –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", "/admin", "–ê–¥–º–∏–Ω"}))
async def admin_entry_msg(msg: Message):
    await msg.answer("–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:", reply_markup=admin_menu_kb())


# --- (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –í–•–û–î –ü–û INLINE-–ö–ù–û–ü–ö–ï ---
@router.callback_query(F.data.in_({"adm:panel", "adm:open"}))
async def admin_entry_cb(cb: CallbackQuery):
    await cb.message.answer("–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:", reply_markup=admin_menu_kb())
    await cb.answer()


@router.message(F.text.in_({"‚öôÔ∏è –ê–¥–º–∏–Ω", "/admin", "–ê–¥–º–∏–Ω"}))
async def admin_entry(msg: Message):
    await msg.answer("–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:", reply_markup=admin_menu_kb())

@router.callback_query(F.data == "adm:users")
async def admin_users_entry(cb: CallbackQuery):
    from crm2.keyboards.admin_users import users_groups_kb
    await cb.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å –≥—Ä—É–ø–ø—É:", reply_markup=users_groups_kb())
    # await cb.message.answer("üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ‚Üí —Å–∫–æ—Ä–æ —Ç—É—Ç –±—É–¥—É—Ç —Å–ø–∏—Å–∫–∏, –ø–æ–∏—Å–∫ –∏ —Å–º–µ–Ω–∞ —Ä–æ–ª–µ–π.")
    await cb.answer()

@router.callback_query(F.data == "adm:schedule")
async def admin_schedule_entry(cb: CallbackQuery):
    await cb.message.answer("üóì –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ ‚Üí –∏–º–ø–æ—Ä—Ç XLSX –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä –±–ª–∏–∂–∞–π—à–∏—Ö –∑–∞–Ω—è—Ç–∏–π.")
    await cb.answer()

@router.callback_query(F.data == "adm:broadcast")
async def admin_broadcast_entry(cb: CallbackQuery):
    # —Ä–µ–∞–ª—å–Ω—ã–π –º–∞—Å—Ç–µ—Ä-—Ä–∞—Å—Å—ã–ª–∫–∏ –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω—ã–º –º–æ–¥—É–ª–µ–º (handlers/admin/broadcast.py)
    await cb.message.answer("üì£ –†–∞—Å—Å—ã–ª–∫–∞ ‚Üí –∑–∞–ø—É—Å—Ç–∏—Ç–µ –º–∞—Å—Ç–µ—Ä-—Ä–∞—Å—Å—ã–ª–∫–∏.")
    await cb.answer()

@router.callback_query(F.data == "adm:logs")
async def admin_logs_entry(cb: CallbackQuery):
    await cb.message.answer("üßæ –õ–æ–≥–∏ ‚Üí —Å–≤–æ–¥–∫–∞ –ø–æ —Ä–∞—Å—Å—ã–ª–∫–∞–º –∏ —Å–ª—É–∂–µ–±–Ω—ã–µ –∑–∞–ø–∏—Å–∏.")
    await cb.answer()