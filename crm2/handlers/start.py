# === crm2/handlers/start.py ===
from aiogram import Router, types
from aiogram.filters import CommandStart
from crm2.db.users import get_user_by_tg
from crm2.keyboards._impl import guest_start_kb, role_kb

router = Router()


@router.message(CommandStart())
async def cmd_start(message: types.Message) -> None:
    """
    /start
    - –ì–æ—Å—Ç—å: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –≥–æ—Å—Ç–µ–≤–æ–µ –º–µ–Ω—é (–í–æ–π—Ç–∏ / –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è / –û –ø—Ä–æ–µ–∫—Ç–µ).
    - –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π: —Å—Ä–∞–∑—É –ø–æ–ø–∞–¥–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (–±–µ–∑ –∞–≤—Ç–æ-–ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ).
    """
    tg_id = message.from_user.id

    # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    user = await get_user_by_tg(tg_id)

    # --- –ì–æ—Å—Ç—å ---
    if user is None:
        await message.answer(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *Psytech*! üåå\n"
            "–í—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏–ª–∏ —Å–Ω–∞—á–∞–ª–∞ —É–∑–Ω–∞—Ç—å –æ –ø—Ä–æ–µ–∫—Ç–µ.",
            reply_markup=guest_start_kb(),
            parse_mode="Markdown",
        )
        return

    # --- –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ---
    role = (user.get("role") or "user").strip()
    await message.answer(
        f"–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (–≤–∞—à–∞ —Ä–æ–ª—å: {role})",
        reply_markup=role_kb(role),
    )
