#
# === –§–∞–π–ª: crm2/handlers/info.py
# –ê–Ω–Ω–æ—Ç–∞—Ü–∏—è: –º–æ–¥—É–ª—å CRM, —Ö–µ–Ω–¥–ª–µ—Ä—ã –∏ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è —Å–æ–±—ã—Ç–∏–π Telegram, Telegram-–±–æ—Ç –Ω–∞ aiogram 3.x. –í–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏: _get, _code, _fmt_date, _build_details_kb, show_schedule....
# –î–æ–±–∞–≤–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ 2025-08-21 05:43:17

# crm2/handlers/info.py
from __future__ import annotations

from aiogram import Router, F
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.types import Message, CallbackQuery

from crm2.services.schedule import upcoming  # —ç–ª–µ–º–µ–Ω—Ç—ã –∏–º–µ—é—Ç –ø–æ–ª—è start/end –∏, –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏, topic_code/title/annotation

router = Router(name="info")


def _get(obj, key):
    """–î–æ—Å—Ç–∞—ë—Ç –ø–æ–ª–µ –∏ —É –æ–±—ä–µ–∫—Ç–∞, –∏ —É dict."""
    try:
        return getattr(obj, key)
    except AttributeError:
        pass
    if isinstance(obj, dict):
        return obj.get(key)
    return None


def _code(it) -> str:
    """–ë–µ—Ä—ë–º –∏–Ω–¥–µ–∫—Å –∑–∞–Ω—è—Ç–∏—è –ø–æ –ª—é–±–æ–º—É –∏–∑ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∏–º—ë–Ω –ø–æ–ª—è."""
    for k in ("topic_code", "code", "topic", "index"):
        v = _get(it, k)
        if v:
            return str(v)
    return ""


def _fmt_date(d) -> str:
    return d.strftime("%d.%m.%Y")


def _build_details_kb(items) -> InlineKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∏-—Å—Ç—Ä–æ–∫–∏: –î–ê–¢–´ + –∏–Ω–¥–µ–∫—Å –∫—É—Ä—Å–∞."""
    rows = []
    for it in items:
        start = _get(it, "start")
        end = _get(it, "end") or start
        if not start:
            continue
        code = _code(it)
        text = f"{_fmt_date(start)} ‚Äî {_fmt_date(end)}" + (f" ‚Ä¢ {code}" if code else "")
        cb = f"sess:{start.strftime('%Y%m%d')}"
        rows.append([InlineKeyboardButton(text=text, callback_data=cb)])
    return InlineKeyboardMarkup(inline_keyboard=rows)


@router.message(F.text == "üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
async def show_schedule(message: Message):
    """–°–ø–∏—Å–æ–∫ –∑–∞–Ω—è—Ç–∏–π: –¥–∞—Ç—ã + –∏–Ω–¥–µ–∫—Å –≤ —Å–∫–æ–±–∫–∞—Ö; –∫–Ω–æ–ø–∫–∏ ‚Äî –¥–∞—Ç—ã + –∏–Ω–¥–µ–∫—Å."""
    items = upcoming(message.from_user.id, limit=100)
    if not items:
        await message.answer("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π:\n‚Ä¢ –±–ª–∏–∂–∞–π—à–∏—Ö –∑–∞–Ω—è—Ç–∏–π –ø–æ–∫–∞ –Ω–µ—Ç.", reply_markup=role_kb("user"))
        return

    lines = ["–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π:"]
    for it in items:
        start = _get(it, "start")
        end = _get(it, "end") or start
        code = _code(it)
        code_txt = f" ({code})" if code else ""
        lines.append(f"‚Ä¢ {_fmt_date(start)} ‚Äî {_fmt_date(end)}{code_txt}")

    await message.answer("\n".join(lines), reply_markup=_build_details_kb(items))


@router.callback_query(F.data.startswith("sess:"))
async def session_details(cb: CallbackQuery):
    """–ö–∞—Ä—Ç–æ—á–∫–∞ –∑–∞–Ω—è—Ç–∏—è: –¥–∞—Ç—ã, –∫–æ–¥, —Ç–µ–º–∞ –∏ –∞–Ω–Ω–æ—Ç–∞—Ü–∏—è."""
    start_key = cb.data.split(":", 1)[1]  # YYYYMMDD
    items = upcoming(cb.from_user.id, limit=200)

    target = None
    for it in items:
        s = _get(it, "start")
        if s and s.strftime("%Y%m%d") == start_key:
            target = it
            break

    if not target:
        await cb.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∑–∞–ø–∏—Å—å :(", show_alert=True)
        return

    start = _get(target, "start")
    end = _get(target, "end") or start
    code = _code(target)
    title = _get(target, "title")
    ann = _get(target, "annotation")

    text = f"üóì {_fmt_date(start)} ‚Äî {_fmt_date(end)}"
    if code:
        text += f"\n–ö–æ–¥: {code}"
    if title:
        text += f"\n–¢–µ–º–∞: {title}"
    if ann:
        ann = ann if len(ann) <= 3600 else ann[:3600] + "‚Ä¶"
        text += "\n–ê–Ω–Ω–æ—Ç–∞—Ü–∏—è:\n" + ann

    await cb.message.answer(text, reply_markup=role_kb("user"))
    await cb.answer()


# ** *a / crm2 / handlers / info.py
# --- –ò–ò-–∞–≥–µ–Ω—Ç—ã ---
from crm2.keyboards.agents import agents_menu_kb


@router.message(F.text == "ü§ñ –ò–ò-–∞–≥–µ–Ω—Ç—ã")
async def show_agents(message: Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ò–ò-–∞–≥–µ–Ω—Ç–∞:", reply_markup=agents_menu_kb())


@router.message(F.text == "üßò –í–æ–ª–µ–≤–∞—è –º–µ–¥–∏—Ç–∞—Ü–∏—è (–Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ VPN)")
async def open_meditation(message: Message):
    await message.answer(
        "–û—Ç–∫—Ä—ã—Ç—å: [–í–æ–ª–µ–≤–∞—è –º–µ–¥–∏—Ç–∞—Ü–∏—è](https://chatgpt.com/g/g-6871e6ae78c481918109e8813e51bc84-volevaia-meditatsiia)",
        disable_web_page_preview=True,
    )


@router.message(F.text == "‚öñÔ∏è –ü—Å–∏—Ö–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –≥–∞—Ä–º–æ–Ω–∏–∏ (–Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ VPN)")
async def open_harmony(message: Message):
    await message.answer(
        "–û—Ç–∫—Ä—ã—Ç—å: [–ü—Å–∏—Ö–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –≥–∞—Ä–º–æ–Ω–∏–∏](https://chatgpt.com/g/g-687493b5969c8191975066fd9970bd24-psikhotekhnologii-garmonii)",
        disable_web_page_preview=True,
    )

@router.message(F.text == "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é ChatGPT-–ê–ì–ï–ù–¢–û–í")
async def open_agents_instruction(message: Message):
    await message.answer(
        "üìñ *–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é ChatGPT-–ê–ì–ï–ù–¢–û–í*\n"
        "1Ô∏è‚É£ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –≤–∫–ª—é—á—ë–Ω VPN (ChatGPT –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –±–µ–∑ –Ω–µ–≥–æ).\n"
        "2Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω—É–∂–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞ –≤ –º–µ–Ω—é ¬´–ò–ò-–∞–≥–µ–Ω—Ç—ã¬ª.\n"
        "3Ô∏è‚É£ –í –æ—Ç–∫—Ä—ã–≤—à–µ–π—Å—è —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤—ã–±–µ—Ä–∏—Ç–µ –≤—Ö–æ–¥ —á–µ—Ä–µ–∑ Google (*Continue with Google*).\n"
        "4Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π Google-–∞–∫–∫–∞—É–Ω—Ç –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤—Ö–æ–¥.\n"
        "5Ô∏è‚É£ –ü–æ—Å–ª–µ –≤—Ö–æ–¥–∞ –æ—Ç–∫—Ä–æ–µ—Ç—Å—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–≥–µ–Ω—Ç–∞. –ù–∞–∂–º–∏—Ç–µ ‚≠êÔ∏è *Add to favorites* –∏–ª–∏ ¬´–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ¬ª, "
        "—á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∞–≥–µ–Ω—Ç–∞ —É —Å–µ–±—è –≤ ChatGPT.\n"
        "üí° *–í–∞–∂–Ω–æ:* –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ GPT-–∞–≥–µ–Ω—Ç–∞–º–∏ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –æ–ø–ª–∞—Ç—ã ‚Äî –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ ChatGPT.\n"
        "–¢–µ–ø–µ—Ä—å –∞–≥–µ–Ω—Ç –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –≤–∞—à–µ–º —Å–ø–∏—Å–∫–µ —á–∞—Ç–æ–≤ –≤ ChatGPT.\n"
        "‚ÑπÔ∏è –ü–æ–¥—Å–∫–∞–∑–∫–∞: –µ—Å–ª–∏ –∞–≥–µ–Ω—Ç –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è ‚Äî –ø—Ä–æ–≤–µ—Ä—å—Ç–µ VPN –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –±—Ä–∞—É–∑–µ—Ä.\n"
        "–ï—Å–ª–∏ —É –≤–∞—Å –Ω–µ—Ç –¥—Ä—É–∑–µ–π –∑–∞ –≥—Ä–∞–Ω–∏—Ü–µ–π, –º–æ–∂–Ω–æ –ø–æ—Å—Ç—É–ø–∏—Ç—å —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–º –ø—É—Ç—ë–º,\n"
        "–æ—Ç–∫—Ä—ã–≤–∞–µ—Ç–µ –ø–æ–∏—Å–∫ –≤ —è–Ω–¥–µ–∫—Å–µ –∏–ª–∏ –≥—É–≥–ª–µ, –≤–≤–æ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ ChatGPT.\n"
        "üìù –Ω–∞–ø—Ä–∏–º–µ—Ä: https://yandex.ru/video/preview/15095507383715000533\n"
        "üìù –Ω–∞–ø—Ä–∏–º–µ—Ä: https://yandex.ru/video/preview/5822067052173058585\n"
        "—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ –∑–∞—Ä—É–±–µ–∂–Ω–æ–≥–æ –∑–Ω–∞–∫–æ–º–æ–≥–æ –Ω–∞ ChatGPT\n"
        "–≤–∫—Ä–∞—Ç—Ü–µ: –Ω—É–∂–Ω–æ, —á—Ç–æ –±—ã —É –≤–∞—Å –±—ã–ª –¥—Ä—É–≥,\n"
        "–Ω–∞–ø—Ä–∏–º–µ—Ä - –≤ –∫–æ–ª—É–º–±–∏–∏, –∏–ª–∏ –∫–∞–∫ —É –º–µ–Ω—è\n"
        "–¥–æ—á—å, –≤ –∞—Ä–≥–µ–Ω—Ç–∏–Ω–µ, –∫–æ—Ç–æ—Ä—ã–µ\n"
        "–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π google\n"
        "–∞–∫–∫–∞—É–Ω—Ç, –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å –≤ —Ç–æ–º, —á—Ç–æ –≤\n"
        "ChatGPT –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ –∞–¥—Ä–µ—Å–∞\n"
        "e-mail –∏ —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ —Ç–µ–ª–µ—Ñ–æ–Ω—ã, –ø–æ –∫–æ—Ç–æ—Ä—ã–º\n"
        "–∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.\n"
        "–ü–æ—ç—Ç–æ–º—É\n"
        "1.	–í–∞—à –∑–Ω–∞–∫–æ–º—ã–π —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –¥–ª—è\n"
        "–≤–∞—Å –ø–æ—á—Ç–æ–≤—ã–π —è—â–∏–∫ –Ω–∞ gmail.com.\n"
        "2.	–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –ø–æ—á—Ç–æ–≤—ã–π —è—â–∏–∫ —á–µ—Ä–µ–∑\n"
        "—Å–≤–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω.\n"
        "3.	–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è –Ω–∞ chatgpt.com\n"
        "—á–µ—Ä–µ–∑ —ç—Ç–æ—Ç google-–∞–∫–∫–∞—É–Ω—Ç. –∏ –¥–∞—ë—Ç –≤–∞–º\n"
        "–¥–æ—Å—Ç—É–ø –∫ —ç—Ç–æ–º—É –≥—É–≥–ª-–∞–∫–∫–∞—É–Ω—Ç—É, —Å–æ–æ–±—â–∞—è\n"
        "–∞–¥—Ä–µc –Ω–∞ gmail.com –∏ –ø–∞—Ä–æ–ª—å –∫ –ø–æ—á—Ç–æ–≤–æ–º—É\n"
        "—è—â–∏–∫—É, —á—Ç–æ –±—ã –≤—ã –º–æ–≥–ª–∏ —Å —ç—Ç–∏–º –∞–∫–∫–∞—É–Ω—Ç–æ–º\n"
        "–≤—Ö–æ–¥–∏—Ç—å –≤ chatgpt.\n"
        "4.	–ù–æ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–¥–∞ –≤ google-\n"
        "–∞–∫–∫–∞—É–Ω—Ç –≤–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è —Å—Ä–æ—á–Ω—ã–π –∏\n"
        "–Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç —Å –¥—Ä—É–≥–æ–º –ø–æ\n"
        "—Ç–µ–ª–µ–≥—Ä–∞–º—É –∏–ª–∏ –≤–∞—Ü–∞–ø—É, –ø–æ—Å–∫–æ–ª—å–∫—É –≤—ã\n"
        "–±—É–¥–µ—Ç–µ –≤—Ö–æ–¥–∏—Ç—å –≤ –∞–∫–∫–∞—É–Ω—Ç —Å–æ —Å–≤–æ–µ–≥–æ\n"
        "—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞, –∞ —ç—Ç–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è.\n"
        "–ü–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ, —á—Ç–æ —ç—Ç–æ\n"
        "–≤—Ö–æ–¥–∏—Ç, —Ç–∏–ø–∞ –≤–∞—à –¥—Ä—É–≥, –Ω–æ —Å –≤–∞—à–µ–≥–æ\n"
        "—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞. –í–∞—à–µ–º—É –¥—Ä—É–≥—É –ø—Ä–∏–¥—ë—Ç –°–ú–° –Ω–∞\n"
        "–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—Ö–æ–¥–∞ –≤ google-–∞–∫–∫–∞—É–Ω—Ç –≤\n"
        "–≤–∏–¥–µ —á–∏—Å–ª–∞ –∏ —ç—Ç–æ —á–∏—Å–ª–æ –≤–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç\n"
        "–≤–≤–µ—Å—Ç–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É, —á—Ç–æ –µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–æ–º\n"
        "—Ö–æ—á–µ—Ç –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥—Ä—É–≥–æ–π —á–µ–ª–æ–≤–µ–∫.\n"
        "—ç—Ç–æ –¥–µ–ª–∞–µ—Ç—Å—è –æ–¥–∏–Ω –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —Ä–∞–∑.\n"
        "–ò–Ω–æ–≥–¥–∞ google —Ç—Ä–µ–±—É–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –µ—â—ë\n"
        "–æ–¥–∏–Ω —Ä–∞–∑. –ï—â—ë –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –º–æ–∂–µ—Ç\n"
        "–ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –ø—Ä–∏ –≤–∞—à–µ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞\n"
        "chatgpt.com, –Ω–∏–∫–∞–∫–∏—Ö –ø–ª–∞—Ç–µ–∂–µ–π –≤–∞–º –¥–µ–ª–∞—Ç—å\n"
        "–Ω–µ –Ω—É–∂–Ω–æ, –µ—Å–ª–∏ –≤—ã –Ω–µ –∑–∞—Ö–æ—Ç–∏—Ç–µ –¥–æ–ø —É—Å–ª—É–≥,\n"
        "–ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–∞–º —Å—Ç–∞–Ω—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã\n"
        "–≤—Å–µ –ò–ò-–∞–≥–µ–Ω—Ç—ã –±–µ—Å–ø–ª–∞—Ç–Ω–æ.\n"

    )


@router.message(F.text == "‚Ü©Ô∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def back_to_main(message: Message):
    from crm2.keyboards import role_kb, guest_start_kb
    from crm2.db.sqlite import DB_PATH
    import sqlite3

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª—å –∏–∑ –±–∞–∑—ã
    with sqlite3.connect(DB_PATH) as con:
        con.row_factory = sqlite3.Row
        cur = con.execute("SELECT role FROM users WHERE telegram_id=?", (message.from_user.id,))
        row = cur.fetchone()
        role = row["role"] if row else "curious"

    if role in (None, "", "curious"):
        await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=guest_start_kb())
    else:
        await message.answer(f"–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (–≤–∞—à–∞ —Ä–æ–ª—å: {role})", reply_markup=role_kb(role))


# --- –û –ø—Ä–æ–µ–∫—Ç–µ ---
from crm2.keyboards.project import project_menu_kb
from crm2.keyboards import role_kb, guest_start_kb
import sqlite3
from crm2.db.sqlite import DB_PATH


@router.message(F.text == "üìñ –û –ø—Ä–æ–µ–∫—Ç–µ")
async def show_project_menu(message: Message):
    await message.answer("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ:", reply_markup=project_menu_kb())


@router.message(F.text == "–ö–∞–∫ –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è –∑–∞–Ω—è—Ç–∏—è")
async def how_sessions_go(message: Message):
    text = (
        "üßò‚Äç‚ôÇÔ∏è *–ö–∞–∫ –ø—Ä–æ—Ö–æ–¥—è—Ç –∑–∞–Ω—è—Ç–∏—è Psytech*\n"
        "–ó–∞–Ω—è—Ç–∏—è —Å—Ç—Ä–æ—è—Ç—Å—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ø—Å–∏—Ö–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –ø—Ä–∞–∫—Ç–∏–∫.\n"
        "üîπ –¢–µ–æ—Ä–∏—è ‚Äî –∫—Ä–∞—Ç–∫–∏–µ –≤–≤–æ–¥–Ω—ã–µ –∏–¥–µ–∏, —á—Ç–æ–±—ã –Ω–∞–ø—Ä–∞–≤–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ.\n"
        "üîπ –ü—Ä–∞–∫—Ç–∏–∫–∞ ‚Äî —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –Ω–∞ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—é, –¥–µ–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—é, "
        "—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ –∏ —Ä–∞–±–æ—Ç—É —Å –≤–æ–ª–µ–π.\n"
        "üîπ –†–µ—Ñ–ª–µ–∫—Å–∏—è ‚Äî –æ–±—Å—É–∂–¥–µ–Ω–∏–µ –æ–ø—ã—Ç–∞ –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –µ–≥–æ –≤ –∂–∏–∑–Ω—å.\n"
        "–ú—ã —Å–æ–µ–¥–∏–Ω—è–µ–º –¥—Ä–µ–≤–Ω–∏–µ —Ç—Ä–∞–¥–∏—Ü–∏–∏ –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã, —á—Ç–æ–±—ã "
        "—á–µ–ª–æ–≤–µ–∫ –æ–±—Ä–µ–ª —è—Å–Ω–æ—Å—Ç—å, —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –∏ –≥–∞—Ä–º–æ–Ω–∏—é."
    )
    await message.answer(text, parse_mode="Markdown")


@router.message(F.text == "‚Ü©Ô∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def back_to_main_from_project(message: Message):
    with sqlite3.connect(DB_PATH) as con:
        con.row_factory = sqlite3.Row
        row = con.execute("SELECT role FROM users WHERE telegram_id = ? LIMIT 1", (message.from_user.id,)).fetchone()
        role = row["role"] if row else "curious"

    if role in (None, "", "curious"):
        await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=guest_start_kb())
    else:
        await message.answer(f"–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (–≤–∞—à–∞ —Ä–æ–ª—å: {role})", reply_markup=role_kb(role))
